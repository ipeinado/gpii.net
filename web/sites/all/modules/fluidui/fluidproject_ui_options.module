<?php
/**
 * @file
 * This module adds the Fluidproject UI Options project library to your site.
 */


/**
 * Implements hook_libraries_info().
 */
function fluidproject_ui_options_libraries_info() {
  $libraries = array();
  $libraries['fluid'] = array(
    'name' => 'Infusion Fluid UIoptions',
    'vendor url' => 'http://fluidproject.org',
    'download url' => 'https://github.com/fluid-project/infusion/tree/master',
    'version' => '3.0',
    'files' => array(
      'js' => array(
        'lib/infusion/infusion-custom.js',
      ),
      'css' => array(
        'framework/preferences/css/Enactors.css',
        'framework/preferences/css/PrefsEditor.css',
        'framework/preferences/css/SeparatedPanelPrefsEditor.css',
      ),
    ),
  );

  return $libraries;
}


/**
 * Implements hook_page_build().
 */
function fluidproject_ui_options_page_build(&$page) {

  if (!path_is_admin(current_path())) {

    $module_path = drupal_get_path('module', 'fluidproject_ui_options');

    $library_path = libraries_get_path('fluid', TRUE);

    drupal_add_js(array('modulePath' => $module_path), 'setting');
    drupal_add_js(array('libraryPath' => $library_path), 'setting');

    libraries_load('fluid');

    $page['page_top']['fluid'] = array(
      '#weight' => -1000,
      '#markup' => theme('fluidproject'),
    );

    $page['page_top']['fluid']['#attached']['js'] = array(
      'data' => drupal_get_path('module', 'fluidproject_ui_options') . '/js/load.js',
      'group' => JS_THEME,
    );

    $page['page_top']['fluid']['#attached']['css'][] = array(
      'data' => drupal_get_path('module', 'fluidproject_ui_options') . '/css/fluid.css',
      'group' => CSS_THEME,
    );
  }
}

/**
 * Implements hook_theme().
 */
function fluidproject_ui_options_theme($existing, $type, $theme, $path) {
  $themes = array();
  $themes['fluidproject'] = array(
    'template' => 'templates/fluidproject_ui_header',
  );
  return $themes;
}

/**
 * Implements template_preprocess_html(),
 */
function fluidproject_ui_options_preprocess_html(&$vars){
  //read the fluid cookie first
  if (isset($_COOKIE["fluid-ui-settings"])){
    $vals = (array) json_decode($_COOKIE["fluid-ui-settings"]);
    if (isset($vals["preferences"]->fluid_prefs_contrast)){
      $vars['classes_array'][] = "fl-theme-" . $vals["preferences"]->fluid_prefs_contrast;
    }
  }

}
